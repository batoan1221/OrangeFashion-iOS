//
// Prefix header for all source files of the 'OrangeFashion' target in the 'OrangeFashion' project
//

//------------------------------------------------------------------------------------------------------
// Debug vs Production configurations
//------------------------------------------------------------------------------------------------------

#ifdef DEBUG

#define API_SERVER_HOST                             @"http://orangefashion.vn/api/api.php"
#define URBAN_AIRSHIP_APP_KEY                       @""
#define URBAN_AIRSHIP_APP_SECRET                    @""

#else

#define API_SERVER_HOST                             @"http://orangefashion.vn/api/api.php"
#define URBAN_AIRSHIP_APP_KEY                       @""
#define URBAN_AIRSHIP_APP_SECRET                    @""

#endif

//------------------------------------------------------------------------------------------------------
//------------------------------------------------------------------------------------------------------

#define API_OAUTH_TOKEN                             @"/oauth/token"      //This is not inside API_PREFIX
#define API_PREFIX                                  @"/api/v1"
#define API_MY_PROFILE                              @"my_profile"
#define API_SIGN_UP                                 @"sign_up"
#define API_USERS                                   @"users"

#define SERVER_RECEIVE_DATA_ERROR                   @"Failed to receive data from server"
#define UNKNOWN_ERROR_STRING                        @"Unknown error. Please try again"
#define NO_CAMERA_ERROR_STRING                      @"This device does not have camera"
#define PHOTO_GALLERY_ERROR_TITLE                   @"Error accessing photo library"
#define NO_PHOTO_GALLERY_STRING                     @"Device does not support a photo library"
#define PLEASE_WAIT_STRING                          @"Please wait"
#define NO_INTERNET_STRING                          @"Please check your network connection and try again"
#define SERVER_TIMEOUT_STRING                       @"Failed to receive data from server"

//Settings keys on server (should prefix with ios_)
#define SETTINGS_CLIENT_ID                          @"ios_client_id"
#define SETTINGS_CLIENT_SECRET                      @"ios_client_secret"
#define SETTINGS_CRITERCISM_TOKEN                   @"ios_critercism_token"
#define SETTINGS_UPLOAD_IMAGE_SIZE                  @"ios_upload_image_size"
#define SETTINGS_UPLOAD_IMAGE_QUALITY               @"ios_upload_image_quality"
#define SETTINGS_FEEDBACK_EMAIL                     @"ios_feedback_email"
#define SETTINGS_FEEDBACK_SUBJECT                   @"ios_feedback_subject"
#define SETTINGS_FEEDBACK_BODY                      @"ios_feedback_body"

//Hardcoded default values
#define SETTINGS_CLIENT_ID_DEFAULT                  @"d32ff267c592ae0228b9ecb54a2980a5d5bb10c4fdd48d7e77b9f5d01e2f511d"
#define SETTINGS_CLIENT_SECRET_DEFAULT              @"bc093c1303223aa4c045d02fceea27a442337fe768282d40c4e4806000b979ea"
#define SETTINGS_CRITERCISM_TOKEN_DEFAULT           @""
#define SETTINGS_UPLOAD_IMAGE_SIZE_DEFAULT          1024
#define SETTINGS_UPLOAD_IMAGE_QUALITY_DEFAULT       0.70
#define SETTINGS_FEEDBACK_EMAIL_DEFAULT             @"feedback@hungrygowhere.com"
#define SETTINGS_FEEDBACK_SUBJECT_DEFAULT           @"HungryGoWhere iOS Feedback"
#define SETTINGS_FEEDBACK_BODY_DEFAULT              @"My feedback..."

#define ENABLE_FAKE_LOCATION                        YES         //Use the coordinate below, ignore location server
#define FAKE_COORDINATE                             CLLocationCoordinate2DMake(3.18985899, 101.64969727)

#import <Availability.h>
#import <UIKit/UIKit.h>
#import <Foundation/Foundation.h>
#import <CoreData/CoreData.h>
#import <UIKit/UIKit.h>
#import <Foundation/Foundation.h>
#import <QuartzCore/QuartzCore.h>
#import <MapKit/MapKit.h>
#import <FacebookSDK/FacebookSDK.h>
#import <CoreLocation/CoreLocation.h>

//Categories
#import "ISO8601DateFormatter.h"
#import "MKMapView+Additions.h"
#import "NSArray+Additions.h"
#import "NSCalendar+Additions.h"
#import "NSDate+Additions.h"
#import "NSDictionary+Additions.h"
#import "NSObject+Additions.h"
#import "NSString+ActiveSupportInflector.h"
#import "NSString+Additions.h"
#import "NSString+Validation.h"
#import "UIAlertView+Additions.h"
#import "UIBarButtonItem+Custom.h"
#import "UIColor+Custom.h"
#import "UIColor+Hex.h"
#import "UIFont+Additions.h"
#import "UIImage+Additions.h"
#import "UIImageView+Additions.h"
#import "UILabel+Additions.h"
#import "UINavigationController+Additions.h"
#import "UIView+Additions.h"
#import "UIView+Nib.h"
#import "UIScrollView+Additions.h"
#import "UIViewController+Additions.h"
#import "UIWebView+Additions.h"

//Vendors
#import "SVProgressHUD.h"
#import "AFNetworking.h"
#import "UIImageView+AFNetworking.h"
#import "CoreData+MagicalRecord.h"
#import "AFJSONRequestOperation.h"
#import "Crittercism.h"
#import "SSPullToRefresh.h"
#import "PSAlertView.h"
#import "PSActionSheet.h"
#import "OpenUDID+Keychain.h"
#import "OpenUDID.h"
#import "SMPageControl.h"
#import "IIViewDeckController.h"
#import "SVPullToRefresh.h"
#import "UIScrollView+SVPullToRefresh.h"
#import "UIScrollView+SVInfiniteScrolling.h"

//Models
#import "BaseModel.h"
#import "OFSetting.h"
#import "OFHTTPClient.h"
#import "OFProduct.h"
#import "OFProductImages.h"

//Managers
#import "BaseManager.h"
#import "BaseDeviceLibrary.h"
#import "BaseLocationManager.h"
#import "BaseStorageManager.h"
#import "BaseNetworkManager.h"
#import "FacebookManager.h"
#import "OFHelperManager.h"
#import "OFUserManager.h"

//Common VC
#import "BaseViewController.h"
#import "BaseTableViewController.h"
#import "OFLeftMenuViewController.h"
#import "OFNavigationViewController.h"
#import "OFProductsViewController.h"
#import "OFBookmarkViewViewController.h"
#import "DEFacebookComposeViewController.h"


//------------------------------------------------------------------------------------------------------

//
// Convenient macro to check app version
//
#define APP_VERSION                                 ([[[NSBundle mainBundle] infoDictionary] objectForKey:(NSString*)kCFBundleVersionKey])
#define APP_VERSION_EQUAL_TO(v)                     ([APP_VERSION compare:v options:NSNumericSearch] == NSOrderedSame)
#define APP_VERSION_GREATER_THAN(v)                 ([APP_VERSION compare:v options:NSNumericSearch] == NSOrderedDescending)
#define APP_VERSION_GREATER_THAN_OR_EQUAL_TO(v)     ([APP_VERSION compare:v options:NSNumericSearch] != NSOrderedAscending)
#define APP_VERSION_LESS_THAN(v)                    ([APP_VERSION compare:v options:NSNumericSearch] == NSOrderedAscending)
#define APP_VERSION_LESS_THAN_OR_EQUAL_TO(v)        ([APP_VERSION compare:v options:NSNumericSearch] != NSOrderedDescending)

//
// Convenient macro to check system version
// Source: http://stackoverflow.com/questions/3339722/check-iphone-ios-version
//
#define SYSTEM_VERSION                              ([[UIDevice currentDevice] systemVersion])
#define SYSTEM_VERSION_EQUAL_TO(v)                  ([SYSTEM_VERSION compare:v options:NSNumericSearch] == NSOrderedSame)
#define SYSTEM_VERSION_GREATER_THAN(v)              ([SYSTEM_VERSION compare:v options:NSNumericSearch] == NSOrderedDescending)
#define SYSTEM_VERSION_GREATER_THAN_OR_EQUAL_TO(v)  ([SYSTEM_VERSION compare:v options:NSNumericSearch] != NSOrderedAscending)
#define SYSTEM_VERSION_LESS_THAN(v)                 ([SYSTEM_VERSION compare:v options:NSNumericSearch] == NSOrderedAscending)
#define SYSTEM_VERSION_LESS_THAN_OR_EQUAL_TO(v)     ([SYSTEM_VERSION compare:v options:NSNumericSearch] != NSOrderedDescending)

#define DEVICE_NAME                                 ([[UIDevice currentDevice] name])

#define IS_LANDSCAPE                                (UIInterfaceOrientationIsLandscape([UIApplication sharedApplication].statusBarOrientation))
#define IS_PORTRAIT                                 (UIInterfaceOrientationIsPortrait([UIApplication sharedApplication].statusBarOrientation))
#define IS_IPAD                                     ([UIDevice currentDevice].userInterfaceIdiom==UIUserInterfaceIdiomPad)
#define IS_NOT_IPAD                                 ([UIDevice currentDevice].userInterfaceIdiom!=UIUserInterfaceIdiomPad)
#define IS_RETINA                                   ([UIScreen mainScreen].scale > 1)
#define DEVICE_SCALE                                ([UIScreen mainScreen].scale)

#define IS_IPHONE_5 ( fabs( ( double )[ [ UIScreen mainScreen ] bounds ].size.height - ( double )568 ) < DBL_EPSILON )

//
// Source: http://iphoneincubator.com/blog/debugging/the-evolution-of-a-replacement-for-nslog
// Source: http://www.cimgf.com/2010/05/02/my-current-prefix-pch-file/
//
// DLog is almost a drop-in replacement for NSLog to turn off logging for release build
//
// add -DDEBUG to OTHER_CFLAGS in the build user defined settings
//
// Usage:
//
// DLog();
// DLog(@"here");
// DLog(@"value: %d", x);
// Unfortunately this doesn't work DLog(aStringVariable); you have to do this instead DLog(@"%@", aStringVariable);
//

#ifdef DEBUG
#define DLog(__FORMAT__, ...) NSLog((@"%s [L:%d] " __FORMAT__), __PRETTY_FUNCTION__, __LINE__, ##__VA_ARGS__)
#define ALog(...) [[NSAssertionHandler currentHandler] handleFailureInFunction:[NSString stringWithCString:__PRETTY_FUNCTION__ encoding:NSUTF8StringEncoding] file:[NSString stringWithCString:__FILE__ encoding:NSUTF8StringEncoding] lineNumber:__LINE__ description:__VA_ARGS__]
#else
#define DLog(...) do {} while (0)
#define ALog(__FORMAT__, ...) NSLog((@"%s [L:%d] " __FORMAT__), __PRETTY_FUNCTION__, __LINE__, ##__VA_ARGS__)
#endif
